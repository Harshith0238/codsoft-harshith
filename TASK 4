!pip install scikit-surprise
import pandas as pd
from surprise import Dataset, Reader, KNNBasic
from surprise.model_selection import train_test_split
from surprise import accuracy
from google.colab import drive

drive.mount('/content/drive')
file_path_1 = '/content/drive/My Drive/Colab Notebooks/dataset/ml-latest-small/movies.csv'
file_path_2 = '/content/drive/My Drive/Colab Notebooks/dataset/ml-latest-small/ratings.csv'

movies = pd.read_csv(file_path_1)
ratings = pd.read_csv(file_path_2)

reader = Reader(rating_scale=(0.5, 5))
data = Dataset.load_from_df(ratings[['userId', 'movieId', 'rating']], reader)

trainset, testset = train_test_split(data, test_size=0.2) # Corrected line

sim_options = {
    'name': 'cosine',
    'user_based': True,
}
model = KNNBasic(sim_options=sim_options)
model.fit(trainset)

predictions = model.test(testset)

rmse = accuracy.rmse(predictions)

def recommend_movies(user_id, n=10):
    movies_watched = ratings[ratings['userId'] == user_id]['movieId'].tolist()
    unrated_movies = movies[~movies['movieId'].isin(movies_watched)]

    recommendations = []
    for movie_id in unrated_movies['movieId']:
        predicted_rating = model.predict(user_id, movie_id).est
        recommendations.append((movie_id, predicted_rating))

    recommendations.sort(key=lambda x: x[1], reverse=True)
    top_n_recommendations = recommendations[:n]

    recommended_movies = movies[movies['movieId'].isin([movie[0] for movie in top_n_recommendations])]
    return recommended_movies[['movieId', 'title']]

user_id = 1
recommended_movies = recommend_movies(user_id, n=10)
print(f"Top 10 recommended movies for User {user_id}:")
print(recommended_movies)

user_id = 5
recommended_movies = recommend_movies(user_id, n=10)
print(f"Top 10 recommended movies for User {user_id}:")
print(recommended_movies)
