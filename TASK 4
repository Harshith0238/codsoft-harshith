import random

class RecommendationSystem:
    def __init__(self):
        self.purchase_history = {}  # Dictionary to store purchase history for each user

    def update_purchase_history(self, user_id, purchased_items):
        if user_id not in self.purchase_history:
            self.purchase_history[user_id] = []
        self.purchase_history[user_id].extend(purchased_items)

    def recommend_items(self, user_id, n=5):
        if user_id in self.purchase_history:
            purchased_items = self.purchase_history[user_id]
            # Here you can implement your recommendation logic based on the user's purchase history
            # For demonstration purposes, we're just randomly selecting items from the purchase history
            recommended_items = random.sample(purchased_items, min(n, len(purchased_items)))
            return recommended_items
        else:
            return []

# Example usage:
recommendation_system = RecommendationSystem()

# Simulate purchase history for users
recommendation_system.update_purchase_history("user123", ["Laptop", "Mouse", "Keyboard"])
recommendation_system.update_purchase_history("user456", ["Chair", "Desk", "Lamp"])

# Get recommendations for a user
recommended_items = recommendation_system.recommend_items("user123", n=3)
print("Recommended items for user123:", recommended_items)

recommended_items = recommendation_system.recommend_items("user456", n=3)
print("Recommended items for user456:", recommended_items)

